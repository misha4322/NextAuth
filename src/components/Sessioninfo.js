"use client";

import { useState } from "react";
import { decodeJWT } from "../lib/token-utils";

export function SessionInfo({ session }) {
  const [showToken, setShowToken] = useState(false);

  // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–∫–µ–Ω!
  // –≠—Ç–æ —Ç–æ–ª—å–∫–æ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
  const demoToken = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c";
  const decodedToken = decodeJWT(demoToken);

  return (
    <div className="space-y-6">
      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Å—Å–∏–∏ */}
      <div className="p-6 bg-blue-50 rounded-lg border border-blue-200">
        <h2 className="text-xl font-semibold text-blue-800 mb-4">
          üìã –î–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏
        </h2>
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
          <div>
            <p><strong>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:</strong> {session.user.name}</p>
            <p><strong>Email:</strong> {session.user.email}</p>
            <p><strong>ID:</strong> {session.user.id}</p>
          </div>
          <div>
            <p><strong>–ü—Ä–æ–≤–∞–π–¥–µ—Ä:</strong> {session.provider}</p>
            <p><strong>–†–æ–ª—å:</strong> {session.user.role}</p>
            <p><strong>–ò—Å—Ç–µ–∫–∞–µ—Ç:</strong> {new Date(session.expires).toLocaleString()}</p>
          </div>
        </div>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ JWT */}
      <div className="p-6 bg-green-50 rounded-lg border border-green-200">
        <h2 className="text-xl font-semibold text-green-800 mb-4">
          üîê JWT –¢–æ–∫–µ–Ω (–¥–µ–º–æ)
        </h2>
        
        <button
          onClick={() => setShowToken(!showToken)}
          className="mb-4 px-4 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 transition-colors"
        >
          {showToken ? "–°–∫—Ä—ã—Ç—å —Ç–æ–∫–µ–Ω" : "–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É JWT"}
        </button>

        {showToken && (
          <div className="space-y-4">
            <div>
              <h3 className="font-semibold mb-2">–°—Ç—Ä—É–∫—Ç—É—Ä–∞ JWT:</h3>
              <div className="bg-white p-3 rounded border text-xs font-mono">
                <div className="text-red-500">header. payload. signature</div>
                <div className="mt-1">
                  {demoToken.split('.').map((part, index) => (
                    <div key={index} className="mb-1">
                      <span className="font-semibold">
                        {index === 0 ? 'Header:' : index === 1 ? 'Payload:' : 'Signature:'}
                      </span> {part}
                    </div>
                  ))}
                </div>
              </div>
            </div>

            <div>
              <h3 className="font-semibold mb-2">–î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–Ω—ã–π Payload:</h3>
              <pre className="bg-white p-3 rounded border text-xs overflow-auto">
                {JSON.stringify(decodedToken, null, 2)}
              </pre>
            </div>
          </div>
        )}
      </div>

      {/* –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π */}
      <div className="p-6 bg-purple-50 rounded-lg border border-purple-200">
        <h2 className="text-xl font-semibold text-purple-800 mb-4">
          ‚öñÔ∏è –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π —Å–µ—Å—Å–∏–π
        </h2>
        
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div className="bg-white p-4 rounded border">
            <h3 className="font-semibold text-green-600 mb-2">JWT Strategy</h3>
            <ul className="text-sm space-y-1">
              <li>‚úÖ –ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</li>
              <li>‚úÖ –õ–µ–≥–∫–æ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞—Ç—å</li>
              <li>‚úÖ –ù–µ —Ç—Ä–µ–±—É–µ—Ç –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö</li>
              <li>‚ùå –ù–µ–ª—å–∑—è –æ—Ç–æ–∑–≤–∞—Ç—å —Å–µ—Å—Å–∏—é</li>
              <li>‚ùå –û–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π —Ä–∞–∑–º–µ—Ä –¥–∞–Ω–Ω—ã—Ö</li>
            </ul>
          </div>

          <div className="bg-white p-4 rounded border">
            <h3 className="font-semibold text-blue-600 mb-2">Database Strategy</h3>
            <ul className="text-sm space-y-1">
              <li>‚úÖ –ü–æ–ª–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ —Å–µ—Å—Å–∏—è–º–∏</li>
              <li>‚úÖ –ú–æ–∂–Ω–æ –æ—Ç–æ–∑–≤–∞—Ç—å —Å–µ—Å—Å–∏–∏</li>
              <li>‚úÖ –õ—é–±—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —Å–µ—Å—Å–∏–∏</li>
              <li>‚ùå –¢—Ä–µ–±—É–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö</li>
              <li>‚ùå –ú–µ–¥–ª–µ–Ω–Ω–µ–µ —á–µ–º JWT</li>
            </ul>
          </div>
        </div>
      </div>

      {/* –î–µ–π—Å—Ç–≤–∏—è —Å —Å–µ—Å—Å–∏–µ–π */}
      <div className="p-6 bg-yellow-50 rounded-lg border border-yellow-200">
        <h2 className="text-xl font-semibold text-yellow-800 mb-4">
          üõ†Ô∏è –î–µ–π—Å—Ç–≤–∏—è —Å —Å–µ—Å—Å–∏–µ–π
        </h2>
        
        <div className="flex gap-4 flex-wrap">
          <button
            onClick={() => window.location.reload()}
            className="px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors"
          >
            –û–±–Ω–æ–≤–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É
          </button>
          
          <button
            onClick={() => window.location.href = '/dashboard'}
            className="px-4 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 transition-colors"
          >
            –ü–µ—Ä–µ–π—Ç–∏ –≤ –∫–∞–±–∏–Ω–µ—Ç
          </button>
        </div>
      </div>
    </div>
  );
}
